-- Demo for xmltree.e, a reworking of the viewxml.exw example
-- Thomas Parslow (PatRat)
-- tom@almostobsolete.net
-- This demo requires win32lib, EEBAX and viewxml.e on their own don't.
--
-- Based on (orignaly anyway):
-- Demo for Listview wrappers.
-- Matt Lewis (matthewlewis@hotmail.com)

constant XML_FILE = "demo.xml",
         CHUNK_SIZE = 1024 -- How much to read in at a time

include eebax.e
include xmltree.e
without warning
include win32lib.ew
include msgbox.e

without warning

atom TV, Text
object junk

constant 
Win = create( Window, "XML Demo", 0, Default, Default, 640, 460, 0 )
    
TV = create( TreeView,
               "Treeview",
                Win,
                10,
                10,
                300, --CW_USEDEFAULT,
                300, --CW_USEDEFAULT,
                or_all({TVS_HASLINES, TVS_LINESATROOT, TVS_HASBUTTONS,
                        TVS_SHOWSELALWAYS}))

Text = create(   MleText,
                "",
                Win,
                320,
                10,
                300, --CW_USEDEFAULT,
                300, --CW_USEDEFAULT,
                0)


atom iExw, ptr, mask, current
current = 0
ptr = allocate_string( "exw" )
mask = or_all( {LVIF_IMAGE, LVIF_PARAM, LVIF_TEXT})
iExw = w32Func(xLoadIcon,{instance(), ptr} )
free(ptr)
constant 
ICON_ELEMENT     = addIcon( extractIcon( "clsdfold.ico" ) ),
ICON_ATTRIBUTE   = addIcon( iExw ),
ICON_PI          = addIcon( iExw ),
ICON_COMMENT     = addIcon( iExw ),
ICON_CDATA       = addIcon( iExw )


-- Data to be displayed in Text for items in the TV
-- Sequence of {TV index,data} pairs
sequence data
data = {}

procedure AddXMLTreeNodeToTV(atom Parent, atom Node)
    sequence Attributes,Children
    Parent = addTVItem( TV, ICON_ELEMENT, ICON_ELEMENT, xmltree_GetQName(Node), Parent)
    
    -- Add each attribute to the TV
    Attributes = xmltree_GetAttributes(Node)
    for i = 1 to length(Attributes) do
        data = append(data,{
                      addTVItem( TV, ICON_ATTRIBUTE, ICON_ATTRIBUTE, "[att] " & Attributes[i][EEBAX_ATTS_QNAME], Parent),
                      Attributes[i][EEBAX_ATTS_VALUE]})
    end for
  
    -- Add all the nodes children (other xml elements under the current one) to the TV
    Children = xmltree_GetChildren(Node)
    for i = 1 to length(Children) do
        -- Each element of Children is either character data (a sequence) or another node (an atom).
        if sequence(Children[i]) then
            data = append(data,{
                          addTVItem( TV, ICON_CDATA, ICON_CDATA, "[cdata]", Parent),
                          Children[i]})
        else
            AddXMLTreeNodeToTV(Parent,Children[i])
        end if
    end for
end procedure

procedure LoadXMLFile(sequence FileName)
    atom fn
    sequence in
    sequence file
    object node
    
    -- Note that XML files should be read in binary mode, UTF-16 Unicode files tend to get messed up if they're read in text mode
    fn = open(FileName,"rb") 
    if fn = -1 then
        if message_box("Unable to open " & XML_FILE, "EEBAX Demo", MB_ICONERROR) then end if
        return
    end if  

    -- Read in the file
    file = ""
    while 1 do
        in = get_bytes(fn,CHUNK_SIZE)
        file &= in
        if length(in) < CHUNK_SIZE then
            exit
        end if
    end while
    -- Close the file
    close(fn)
    
    
    -- Parse the data
    node = xmltree_Parse(file)
    
    -- If an error occurs then xmltree_Parse will return a string describing the error
    if sequence(node) then
        if message_box("Parse Error: " & node, "EEBAX Demo", MB_ICONERROR) then end if
        return
    end if
    
    -- Initilize the TV
    eraseItems(TV)
    AddXMLTreeNodeToTV(0,node)
end procedure

procedure TV_onChange( )
    atom ix
    current = getIndex( TV )

    -- Show associated data in Text if any exists
    for i = 1 to length(data) do
        if data[i][1] = current then
            setText(Text,data[i][2])
        end if
    end for
end procedure
onChange[TV] = routine_id( "TV_onChange" )

LoadXMLFile("demo.xml")
WinMain( Win, Normal )


